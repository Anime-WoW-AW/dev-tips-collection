
/:b:/r/sites/co-vsti/Administracin%20%20Integral%20de%20Equipos%20de%20TI/Capacidad%20de%20TI/Documentos/Actualizacion%20Manuales%20pedidos%20Helix.pdf?csf=1&web=1&e=NQVYOK

/:b:/r/sites/co-vsti/Administracin%20%20Integral%20de%20Equipos%20de%20TI/Capacidad%20de%20TI/Documentos/Actualizacion%20Manuales%20pedidos%20Helix.pdf?csf=1&web=1&e=BE0Xn8


SELECT 
	E1.ID_UNIDAD_ORGANIZATIVA, 
	E1.DS_ESTRUCTURA AS DS_ESTRUCTURA_HIJO, 
	E1.ESTADO,
	E1.ID_PERSONA_LIDER,
	E2.ID_ESTRUCTURA_PADRE, 
	E2.DS_ESTRUCTURA AS DS_ESTRUCTURA_PADRE,
	E2.ID_PERSONA_LIDER AS ID_PERSONA_LIDER_PADRE
FROM ESTRUCTURA E1 
INNER JOIN ESTRUCTURA E2 
	ON E1.ID_ESTRUCTURA_PADRE = E2.ID_ESTRUCTURA AND E1.ID_ESTRUCTURA != E1.ID_ESTRUCTURA_PADRE 
WHERE E1.ESTADO = "A";

--Forma compacta:
SELECT E1.ID_UNIDAD_ORGANIZATIVA, E1.DS_ESTRUCTURA AS DS_ESTRUCTURA_HIJO, E1.ESTADO, E1.ID_PERSONA_LIDER, E2.ID_ESTRUCTURA_PADRE, E2.DS_ESTRUCTURA AS DS_ESTRUCTURA_PADRE, E2.ID_PERSONA_LIDER AS ID_PERSONA_LIDER_PADRE FROM ESTRUCTURA E1 INNER JOIN ESTRUCTURA E2 ON E1.ID_ESTRUCTURA_PADRE = E2.ID_ESTRUCTURA AND E1.ID_ESTRUCTURA != E1.ID_ESTRUCTURA_PADRE WHERE E1.ESTADO = "A";

--Como estaba antes de incluir al lider:
SELECT E1.ID_UNIDAD_ORGANIZATIVA, E1.DS_ESTRUCTURA AS DS_ESTRUCTURA_HIJO, E1.ESTADO, E2.ID_ESTRUCTURA_PADRE, E2.DS_ESTRUCTURA AS DS_ESTRUCTURA_PADRE FROM ESTRUCTURA E1 INNER JOIN ESTRUCTURA E2 ON E1.ID_ESTRUCTURA_PADRE = E2.ID_ESTRUCTURA AND E1.ID_ESTRUCTURA != E1.ID_ESTRUCTURA_PADRE WHERE E1.ESTADO = "A";

--Incluyendo el nombre y correo de los lideres
SELECT 
	E1.ID_UNIDAD_ORGANIZATIVA, 
	E1.DS_ESTRUCTURA AS DS_ESTRUCTURA_HIJO, 
	E1.ESTADO, 
	TRIM(CONCAT_WS(' ', P1.NOMBRE, IFNULL(P1.APELLIDO1, ''), IFNULL(P1.APELLIDO2, ''))) AS NOMBRE_LIDER_E_HIJA, 
	P1.CORREO AS CORREO_LIDER_E_HIJA, 
	E2.ID_ESTRUCTURA_PADRE, 
	E2.DS_ESTRUCTURA AS DS_ESTRUCTURA_PADRE, 
	TRIM(CONCAT_WS(' ', P2.NOMBRE, IFNULL(P2.APELLIDO1, ''), IFNULL(P2.APELLIDO2, ''))) AS NOMBRE_LIDER_E_PADRE, 
	P2.CORREO AS CORREO_LIDER_E_PADRE 
FROM ESTRUCTURA E1 
INNER JOIN ESTRUCTURA E2 ON E1.ID_ESTRUCTURA_PADRE = E2.ID_ESTRUCTURA AND E1.ID_ESTRUCTURA != E1.ID_ESTRUCTURA_PADRE 
INNER JOIN PERSONA P1 ON E1.ID_PERSONA_LIDER = P1.ID_PERSONA 
INNER JOIN PERSONA P2 ON E2.ID_PERSONA_LIDER = P2.ID_PERSONA 
WHERE E1.ESTADO = "A";

--Mejorando para que traiga todas las estructuras padre con su id correcto
SELECT 
	E1.ID_UNIDAD_ORGANIZATIVA, 
	E1.DS_ESTRUCTURA AS DS_ESTRUCTURA_HIJO, 
	E1.ESTADO, 
	TRIM(CONCAT_WS(' ', P1.NOMBRE, IFNULL(P1.APELLIDO1, ''), IFNULL(P1.APELLIDO2, ''))) AS NOMBRE_LIDER_E_HIJA, 
	P1.CORREO AS CORREO_LIDER_E_HIJA, 
	E2.ID_UNIDAD_ORGANIZATIVA, 
	E2.DS_ESTRUCTURA AS DS_ESTRUCTURA_PADRE, 
	TRIM(CONCAT_WS(' ', P2.NOMBRE, IFNULL(P2.APELLIDO1, ''), IFNULL(P2.APELLIDO2, ''))) AS NOMBRE_LIDER_E_PADRE, 
	P2.CORREO AS CORREO_LIDER_E_PADRE 
FROM ESTRUCTURA E1 
INNER JOIN PERSONA P1 ON E1.ID_PERSONA_LIDER = P1.ID_PERSONA 
LEFT JOIN ESTRUCTURA E2 ON E1.ID_ESTRUCTURA_PADRE = E2.ID_ESTRUCTURA AND E1.ID_ESTRUCTURA != E1.ID_ESTRUCTURA_PADRE 
LEFT JOIN PERSONA P2 ON E2.ID_PERSONA_LIDER = P2.ID_PERSONA 
WHERE E1.ESTADO = "A"


-- Query a tabla Celula para las visuales del Modelo de Priorizacion
SELECT 
	C.CODIGO,
	C.ID_ESTRUCTURA_ADMINISTRATIVA,
	C.DS_CELULA,
	C.ESTADO
	E.DS_ESTRUCTURA,
	E.NIVEL
FROM CELULA C 
INNER JOIN ESTRUCTURA E ON C.ID_ESTRUCTURA_ADMINISTRATIVA = E.ID_ESTRUCTURA
WHERE C.ESTADO = "A";


-- Query para obtener fecha de ingreso de Internos muy antiguos
Tablas necesarias:
	persona -> nombre, correo
	persona_estructura -> fecha inicio, id_causal_ingreso
	causal -> id_causal_ingreso, ds_causal
	persona_empresa-> id_empresa,...
	empresa -> ds_empresa
	
SELECT 
	P.CEDULA,
	P.CORREO,
	PES.FECHA_INICIO,
	C.DS_CAUSAL,
	EM.DS_EMPRESA
FROM PERSONA P
LEFT JOIN PERSONA_ESTRUCTURA PES ON P.ID_PERSONA = PES.ID_PERSONA
LEFT JOIN CAUSAL C ON PES.ID_CAUSAL_INGRESO = C.ID_CAUSAL
LEFT JOIN PERSONA_EMPRESA PEM ON P.ID_PERSONA = PEM.ID_PERSONA
LEFT JOIN EMPRESA EM ON PEM.ID_EMPRESA = EM.ID_EMPRESA
WHERE C.DS_CAUSAL LIKE "%INGRESO%" AND EM.DS_EMPRESA = "BANCOLOMBIA";



-- Query para obtener el nivel de cada conocimiento - NEW
SELECT P.CEDULA, CONCAT_WS(' ', P.NOMBRE, P.APELLIDO1, P.APELLIDO2) AS NOMBRE_PERSONA, C.NOMBRE, TC.DS_TIPO_CONOCIMIENTO, D.NIVEL, D.PUNTAJE AS PUNTAJE_DIAG, CONCAT( '', COALESCE( ROUND(AVG(V.PUNTAJE) / 2, 2), 0 ) ) AS PROMEDIO_VAL, CONCAT('',COALESCE( COUNT(V.ID_DIAGNOSTICO))) AS CANT_VALORACIONES, D.FECHA FROM DIAGNOSTICO D INNER JOIN PERSONA P ON D.ID_PERSONA = P.ID_PERSONA LEFT JOIN CONOCIMIENTO C ON D.ID_CONOCIMIENTO = C.ID_CONOCIMIENTO JOIN TIPO_CONOCIMIENTO TC ON C.ID_TIPO_CONOCIMIENTO = TC.ID_TIPO_CONOCIMIENTO LEFT JOIN VALORACION V ON V.ID_DIAGNOSTICO = D.ID_DIAGNOSTICO WHERE D.ID_TIPO_DIAGNOSTICO = 'TD006' GROUP BY P.CEDULA, P.NOMBRE, P.APELLIDO1, P.APELLIDO2, C.NOMBRE, TC.DS_TIPO_CONOCIMIENTO, D.NIVEL, D.PUNTAJE, V.ID_DIAGNOSTICO ORDER BY P.CEDULA;